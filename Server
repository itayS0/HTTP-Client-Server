import socket
import os


def send(msg):
    client_socket.send(msg.encode())
    print("Server: " + msg[:100])


def close(error):
    send(error)
    client_socket.close()


print("Server is online")
socket = socket.socket()
socket.bind(("0.0.0.0", 80))

message = ""
while message != "EXIT":

    socket.listen()
    (client_socket, client_address) = socket.accept()
    print("A client has connected " + str(client_address))
    message = ""
    while not message.__contains__("HTTP/1.1"):
        message += client_socket.recv(1).decode()

    print("Client: " + message + "\n")
    messageParts = message.split(" ")
    # GET index.html HTTP/1.1\r\n
    if not (messageParts[0] == "GET" and messageParts[2] == "HTTP/1.1"):
        close("500 Internal Server Error")
    else:
        filepath = messageParts[1].split("/")
        filename = filepath[len(filepath) - 1]
        if messageParts[1] == "/":
            messageParts[1] = "index.html"
        if os.path.isfile("C:/webroot/" + messageParts[1]):
            with open("C:/webroot/" + messageParts[1], 'rb', ) as f:
                readfile = f.read()
            readfile = readfile.decode('utf-8', 'ignore')
            if messageParts[1].split(".")[-1] == "txt":
                ContentType = "text/html; charset=utf-8"
            elif messageParts[1].split(".")[-1] == "html":
                ContentType = "text/html; charset=utf-8"
            elif messageParts[1].split(".")[-1] == "jpg":
                ContentType = "image/jpeg"
            elif messageParts[1].split(".")[-1] == "ico":
                ContentType = "image/*"
            elif messageParts[1].split(".")[-1] == "js":
                ContentType = "text/javascript; charset=UTF-8"
            elif messageParts[1].split(".")[-1] == "css":
                ContentType = "text/css"

            send("HTTP/1.1 200 OK\n" + "Content-Length: " + str(
                len(readfile)) + "\n" + "Content-Type: " + ContentType + "\n" + "\n" + readfile)

        elif messageParts[1].__contains__("/calculate-next"):
            answer = str(int(messageParts[1].split("=")[1]) + 1)
            send("HTTP/1.1 200 OK\n" + "Content-Length: " + str(len(answer)) + "\n" + "Content-Type: text/plain" + "\n" + "\n" + answer)

        elif messageParts[1].__contains__("/calculate-area"):
            mul1 = int(''.join(c for c in messageParts[1].split("=")[1] if c.isdigit()))
            mul2 = int(messageParts[1].split("=")[2])
            answer = str(mul1*mul2/2)
            send("HTTP/1.1 200 OK\n" + "Content-Length: " + str(len(answer)) + "\n" + "Content-Type: text/plain" + "\n" + "\n" + answer)

        else:
            send("HTTP/1.1 404 Not Found\n")
